// FullCalendar Local - Versão Simplificada
window.FullCalendar = {
  Calendar: function(element, options) {
    this.element = element;
    this.options = options || {};
    this.events = [];
    this.currentDate = new Date();
    this.view = 'dayGridMonth';
    
    this.render = function() {
      this.element.innerHTML = this.generateCalendarHTML();
      this.bindEvents();
      if (this.options.events) {
        this.addEventSource(this.options.events);
      }
    };
    
    this.generateCalendarHTML = function() {
      var html = '<div class="fc fc-theme-standard fc-direction-ltr">';
      html += this.generateToolbar();
      html += this.generateCalendarGrid();
      html += '</div>';
      return html;
    };
    
    this.generateToolbar = function() {
      var monthNames = ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho',
                       'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'];
      var currentMonth = monthNames[this.currentDate.getMonth()];
      var currentYear = this.currentDate.getFullYear();
      
      return '<div class="fc-toolbar">' +
             '<div class="fc-toolbar-chunk">' +
             '<button class="fc-button fc-prev-button" onclick="calendar.prev()">‹</button>' +
             '</div>' +
             '<div class="fc-toolbar-chunk">' +
             '<h2 class="fc-toolbar-title">' + currentMonth + ' ' + currentYear + '</h2>' +
             '</div>' +
             '<div class="fc-toolbar-chunk">' +
             '<button class="fc-button fc-next-button" onclick="calendar.next()">›</button>' +
             '</div>' +
             '</div>';
    };
    
    this.generateCalendarGrid = function() {
      var html = '<div class="fc-scrollgrid">';
      html += '<table class="fc-scrollgrid-sync-table">';
      html += this.generateHeader();
      html += this.generateBody();
      html += '</table>';
      html += '</div>';
      return html;
    };
    
    this.generateHeader = function() {
      var dayNames = ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb'];
      var html = '<thead><tr>';
      for (var i = 0; i < dayNames.length; i++) {
        html += '<th class="fc-col-header-cell"><div class="fc-col-header-cell-cushion">' + dayNames[i] + '</div></th>';
      }
      html += '</tr></thead>';
      return html;
    };
    
    this.generateBody = function() {
      var html = '<tbody>';
      var firstDay = new Date(this.currentDate.getFullYear(), this.currentDate.getMonth(), 1);
      var lastDay = new Date(this.currentDate.getFullYear(), this.currentDate.getMonth() + 1, 0);
      var startDate = new Date(firstDay);
      startDate.setDate(startDate.getDate() - firstDay.getDay());
      
      var currentWeekDate = new Date(startDate);
      
      for (var week = 0; week < 6; week++) {
        html += '<tr>';
        for (var day = 0; day < 7; day++) {
          var isToday = this.isToday(currentWeekDate);
          var isCurrentMonth = currentWeekDate.getMonth() === this.currentDate.getMonth();
          var dayClass = 'fc-daygrid-day';
          if (isToday) dayClass += ' fc-today';
          if (!isCurrentMonth) dayClass += ' fc-day-other';
          
          html += '<td class="' + dayClass + '" data-date="' + this.formatDate(currentWeekDate) + '">';
          html += '<div class="fc-daygrid-day-number">' + currentWeekDate.getDate() + '</div>';
          html += this.generateEventsForDay(currentWeekDate);
          html += '</td>';
          
          currentWeekDate.setDate(currentWeekDate.getDate() + 1);
        }
        html += '</tr>';
        
        if (currentWeekDate.getMonth() !== this.currentDate.getMonth() && week >= 4) {
          break;
        }
      }
      
      html += '</tbody>';
      return html;
    };
    
    this.generateEventsForDay = function(date) {
      var html = '';
      var dateStr = this.formatDate(date);
      
      for (var i = 0; i < this.events.length; i++) {
        var event = this.events[i];
        var eventDate = new Date(event.start);
        if (this.formatDate(eventDate) === dateStr) {
          html += '<div class="fc-event" style="background-color: ' + (event.backgroundColor || '#3788d8') + ';">';
          html += '<div class="fc-event-title">' + (event.title || '') + '</div>';
          html += '</div>';
        }
      }
      
      return html;
    };
    
    this.isToday = function(date) {
      var today = new Date();
      return date.getDate() === today.getDate() &&
             date.getMonth() === today.getMonth() &&
             date.getFullYear() === today.getFullYear();
    };
    
    this.formatDate = function(date) {
      return date.getFullYear() + '-' + 
             String(date.getMonth() + 1).padStart(2, '0') + '-' + 
             String(date.getDate()).padStart(2, '0');
    };
    
    this.prev = function() {
      this.currentDate.setMonth(this.currentDate.getMonth() - 1);
      this.render();
    };
    
    this.next = function() {
      this.currentDate.setMonth(this.currentDate.getMonth() + 1);
      this.render();
    };
    
    this.addEventSource = function(source) {
      if (typeof source === 'string') {
        // URL source - fazer fetch
        fetch(source)
          .then(response => response.json())
          .then(events => {
            this.events = events;
            this.render();
          })
          .catch(error => console.error('Erro ao carregar eventos:', error));
      } else if (Array.isArray(source)) {
        this.events = source;
        this.render();
      }
    };
    
    this.bindEvents = function() {
      var self = this;
      // Bind click events for date selection
      var cells = this.element.querySelectorAll('.fc-daygrid-day');
      cells.forEach(function(cell) {
        cell.addEventListener('click', function() {
          if (self.options.dateClick) {
            var date = this.getAttribute('data-date');
            self.options.dateClick({dateStr: date, date: new Date(date)});
          }
        });
      });
    };
    
    // Expose calendar globally for navigation buttons
    window.calendar = this;
    
    return this;
  }
};